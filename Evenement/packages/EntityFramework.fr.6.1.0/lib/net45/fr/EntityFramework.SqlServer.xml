<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework.SqlServer</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> qui retente les actions qui lèvent des exceptions provoquées par des échecs temporaires SQL Azure.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor">
      <summary>Crée une instance de <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" />.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" /> avec les limites spécifiées pour le nombre de nouvelles tentatives et le délai entre deux tentatives.</summary>
      <param name="maxRetryCount">Nombre maximal de nouvelles tentatives.</param>
      <param name="maxDelay">Délai maximal en millisecondes entre les tentatives.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.ShouldRetryOn(System.Exception)">
      <summary>Détermine si l'exception spécifiée doit effectuer une nouvelle tentative.</summary>
      <returns>true si l'exception spécifiée doit effectuer une nouvelle tentative ; sinon, false.</returns>
      <param name="exception">Exception sur laquelle effectuer une nouvelle tentative.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlFunctions">
      <summary>Contient des stubs de fonction qui exposent les méthodes SqlServer en Linq to Entities.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Decimal})">
      <summary>Fonction mathématique qui retourne l'angle, en radians, dont le cosinus est la valeur numérique spécifiée.Cet angle s'appelle l'arc cosinus.</summary>
      <returns>Angle mesuré en radians.</returns>
      <param name="arg1">Cosinus d'un angle.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Double})">
      <summary>Fonction mathématique qui retourne l'angle, en radians, dont le cosinus est la valeur numérique spécifiée.Cet angle s'appelle l'arc cosinus.</summary>
      <returns>L'angle, en radians, défini par la valeur de cosinus d'entrée.</returns>
      <param name="arg1">Cosinus d'un angle.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Ascii(System.String)">
      <summary>Retourne la valeur du code ASCII du caractère placé le plus à gauche d'une expression de caractères.</summary>
      <returns>Code ASCII du premier caractère dans la chaîne d'entrée.</returns>
      <param name="arg">Chaîne valide.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Decimal})">
      <summary>Fonction mathématique qui retourne l'angle, en radians, dont le sinus est la valeur numérique spécifiée.Cet angle s'appelle l'arc sinus.</summary>
      <returns>Angle mesuré en radians.</returns>
      <param name="arg">Sinus d'un angle.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Double})">
      <summary>Fonction mathématique qui retourne l'angle, en radians, dont le sinus est la valeur numérique spécifiée.Cet angle s'appelle l'arc sinus.</summary>
      <returns>Angle mesuré en radians.</returns>
      <param name="arg">Sinus d'un angle.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Decimal})">
      <summary>Fonction mathématique qui retourne l'angle, en radians, dont la tangente est la valeur numérique spécifiée.Cet angle s'appelle l'arc tangent.</summary>
      <returns>Angle mesuré en radians.</returns>
      <param name="arg">Tangente d'un angle.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Double})">
      <summary>Fonction mathématique qui retourne l'angle, en radians, dont la tangente est la valeur numérique spécifiée.Cet angle s'appelle l'arc tangent.</summary>
      <returns>Angle mesuré en radians.</returns>
      <param name="arg">Tangente d'un angle.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>Retourne l'angle positif, en radians, entre l'axe des abscisses positifs et le rayon depuis l'origine jusqu'au point (x, y) où x et y sont les deux valeurs numériques spécifiées.Le premier paramètre passé à la fonction est la valeur y et le deuxième paramètre est la valeur x.</summary>
      <returns>Angle mesuré en radians.</returns>
      <param name="arg1">Coordonnée y d'un point.</param>
      <param name="arg2">Coordonnée x d'un point.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Retourne l'angle positif, en radians, entre l'axe des abscisses positifs et le rayon depuis l'origine jusqu'au point (x, y) où x et y sont les deux valeurs numériques spécifiées.Le premier paramètre passé à la fonction est la valeur y et le deuxième paramètre est la valeur x.</summary>
      <returns>Angle mesuré en radians.</returns>
      <param name="arg1">Coordonnée y d'un point.</param>
      <param name="arg2">Coordonnée x d'un point.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Char(System.Nullable{System.Int32})">
      <summary>Retourne le caractère qui correspond à la valeur ASCII entière spécifiée.</summary>
      <returns>Caractère qui correspond à la valeur ASCII spécifiée.</returns>
      <param name="arg">Code ASCII.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[])">
      <summary>Retourne la position de départ d'une expression trouvée au sein d'une autre expression.</summary>
      <returns>Position de départ de la cible si elle est présente dans toSearch.</returns>
      <param name="toSearch">Expression de chaîne à rechercher.</param>
      <param name="target">Expression de chaîne à trouver.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})">
      <summary>Retourne la position de départ d'une expression trouvée au sein d'une autre expression.</summary>
      <returns>Position de départ de la cible si elle est présente dans toSearch.</returns>
      <param name="toSearch">Expression de chaîne à rechercher.</param>
      <param name="target">Expression de chaîne à trouver.</param>
      <param name="startLocation">Position du caractère dans toSearch où la recherche commence.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
      <summary>Retourne la position de départ d'une expression trouvée au sein d'une autre expression.</summary>
      <returns>Position de départ de la cible si elle est présente dans toSearch.</returns>
      <param name="toSearch">Expression de chaîne à rechercher.</param>
      <param name="target">Expression de chaîne à trouver.</param>
      <param name="startLocation">Position du caractère dans toSearch où la recherche commence.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String)">
      <summary>Retourne la position de départ d'une expression trouvée au sein d'une autre expression.</summary>
      <returns>Position de départ de la cible si elle est présente dans toSearch.</returns>
      <param name="toSearch">Expression de chaîne à rechercher.</param>
      <param name="target">Expression de chaîne à trouver.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})">
      <summary>Retourne la position de départ d'une expression trouvée au sein d'une autre expression.</summary>
      <returns>Position de départ de la cible si elle est présente dans toSearch.</returns>
      <param name="toSearch">Expression de chaîne à rechercher.</param>
      <param name="target">Expression de chaîne à trouver.</param>
      <param name="startLocation">Position du caractère dans toSearch où la recherche commence.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})">
      <summary>Retourne la position de départ d'une expression trouvée au sein d'une autre expression.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> de la valeur <see cref="T:System.Int64" /> qui est la position de départ de la cible si elle est présente dans toSearch.</returns>
      <param name="toSearch">Expression de chaîne à rechercher.</param>
      <param name="target">Expression de chaîne à trouver.</param>
      <param name="startLocation">Position du caractère dans toSearch où la recherche commence.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[])">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Tableau de caractères pour lequel est calculé le checksum.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[])">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Tableau de caractères pour lequel est calculé le checksum.</param>
      <param name="arg2">Tableau de caractères pour lequel est calculé le checksum.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Tableau de caractères pour lequel est calculé le checksum.</param>
      <param name="arg2">Tableau de caractères pour lequel est calculé le checksum.</param>
      <param name="arg3">Tableau de caractères pour lequel est calculé le checksum.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean})">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime})">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal})">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double})">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid})">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String)">
      <summary>Retourne la valeur checksum calculée à partir de l'argument d'entrée.</summary>
      <returns>Checksum calculé à partir de la valeur d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String)">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String,System.String)">
      <summary>Retourne la valeur checksum calculée à partir des arguments d'entrée.</summary>
      <returns>Checksum calculé à partir des valeurs d'entrée.</returns>
      <param name="arg1">Valeur du checksum calculé.</param>
      <param name="arg2">Valeur du checksum calculé.</param>
      <param name="arg3">Valeur du checksum calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Retourne le checksum des valeurs d'une collection.Les valeurs NULL sont ignorées.</summary>
      <returns>Checksum calculé à partir de la collection d'entrée.</returns>
      <param name="arg">Collection des valeurs sur lesquelles le checksum est calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Retourne le checksum des valeurs d'une collection.Les valeurs NULL sont ignorées.</summary>
      <returns>Checksum calculé à partir de la collection d'entrée.</returns>
      <param name="arg">Collection des valeurs sur lesquelles le checksum est calculé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Decimal})">
      <summary>Retourne le cosinus trigonométrique de l'angle spécifié, en radians, dans l'expression spécifiée.</summary>
      <returns>Cosinus trigonométrique de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Double})">
      <summary>Retourne le cosinus trigonométrique de l'angle spécifié, en radians, dans l'expression spécifiée.</summary>
      <returns>Cosinus trigonométrique de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Decimal})">
      <summary>Fonction mathématique qui retourne la cotangente trigonométrique de l'angle spécifié, en radians.</summary>
      <returns>Cotangente trigonométrique de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Double})">
      <summary>Fonction mathématique qui retourne la cotangente trigonométrique de l'angle spécifié, en radians.</summary>
      <returns>Cotangente trigonométrique de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentTimestamp">
      <summary>Retourne la date et l'heure actuelles.</summary>
      <returns>Date et heure actuelles.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentUser">
      <summary>Retourne le nom de l'utilisateur actuel.</summary>
      <returns>Nom de l'utilisateur actuel.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Byte[])">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Boolean})">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTime})">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Decimal})">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Double})">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Guid})">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.String)">
      <summary>Retourne le nombre d'octets utilisés pour représenter une expression.</summary>
      <returns>Nombre d'octets dans la valeur d'entrée.</returns>
      <param name="arg">Valeur dont la longueur des données doit être examinée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})">
      <summary>Retourne une nouvelle valeur de date/heure basée sur l'ajout d'un intervalle à la date spécifiée.</summary>
      <returns>Nouvelle date.</returns>
      <param name="datePartArg">Portion de la date à incrémenter.</param>
      <param name="number">Valeur utilisée pour incrémenter une date par une quantité spécifiée.</param>
      <param name="date">Date à incrémenter.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})">
      <summary>Retourne une nouvelle valeur de date basée sur l'ajout d'un intervalle à la date spécifiée.</summary>
      <returns>Nouvel instant précis, exprimé sous la forme d'une date et d'une heure, par rapport au temps universel (UTC, Universal Time Coordinated).</returns>
      <param name="datePartArg">Portion de la date à incrémenter.</param>
      <param name="number">Valeur utilisée pour incrémenter une date par une quantité spécifiée.</param>
      <param name="dateTimeOffsetArg">Date à incrémenter.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})">
      <summary>Retourne une nouvelle valeur d'intervalle de temps basée sur l'ajout d'un intervalle à l'intervalle de temps spécifié.</summary>
      <returns>Nouvel intervalle de temps.</returns>
      <param name="datePartArg">Portion de la date à incrémenter.</param>
      <param name="number">Valeur utilisée pour incrémenter une date par une quantité spécifiée.</param>
      <param name="time">Intervalle de temps à incrémenter.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)">
      <summary>Retourne une nouvelle valeur de date/heure basée sur l'ajout d'un intervalle à la date spécifiée.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> de la valeur <see cref="T:System.DateTime" /> qui est la nouvelle date.</returns>
      <param name="datePartArg">Portion de la date à incrémenter.</param>
      <param name="number">Valeur utilisée pour incrémenter une date par une quantité spécifiée.</param>
      <param name="date">Date à incrémenter.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Valeur spécifiant le nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.String)">
      <summary>Retourne le nombre de limites datepart (partie de date) spécifiées croisées entre la date de début et la date de fin.</summary>
      <returns>Nombre d'intervalles de temps entre les deux dates.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="startDate">Première date.</param>
      <param name="endDate">Deuxième date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})">
      <summary>Retourne une chaîne de caractères qui représente le datepart (partie de date) de la date spécifiée.</summary>
      <returns>Portion spécifiée de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>Retourne une chaîne de caractères qui représente le datepart (partie de date) de la date spécifiée.</summary>
      <returns>Portion spécifiée de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})">
      <summary>Retourne une chaîne de caractères qui représente le datepart (partie de date) de la date spécifiée.</summary>
      <returns>Portion spécifiée de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.String)">
      <summary>Retourne une chaîne de caractères qui représente le datepart (partie de date) de la date spécifiée.</summary>
      <returns>Portion spécifiée de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui calcule le nombre différent d'intervalles de temps.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})">
      <summary>Retourne un entier qui représente la partie de date spécifiée de la date donnée.</summary>
      <returns>Datepart (partie de date) spécifié de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui retourne la valeur.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>Retourne un entier qui représente la partie de date spécifiée de la date donnée.</summary>
      <returns>Datepart (partie de date) spécifié de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui retourne la valeur.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})">
      <summary>Retourne un entier qui représente la partie de date spécifiée de la date donnée.</summary>
      <returns>Datepart (partie de date) spécifié de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui retourne la valeur.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.String)">
      <summary>Retourne un entier qui représente la partie de date spécifiée de la date donnée.</summary>
      <returns>Datepart (partie de date) spécifié de la date spécifiée.</returns>
      <param name="datePartArg">Portion de la date qui retourne la valeur.</param>
      <param name="date">Date.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Decimal})">
      <summary>Retourne l'angle correspondant en degrés pour un angle spécifié en radians.</summary>
      <returns>Angle spécifié converti en degrés.</returns>
      <param name="arg1">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Double})">
      <summary>Retourne l'angle correspondant en degrés pour un angle spécifié en radians.</summary>
      <returns>Angle spécifié converti en degrés.</returns>
      <param name="arg1">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int32})">
      <summary>Retourne l'angle correspondant en degrés pour un angle spécifié en radians.</summary>
      <returns>Angle spécifié converti en degrés.</returns>
      <param name="arg1">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int64})">
      <summary>Retourne l'angle correspondant en degrés pour un angle spécifié en radians.</summary>
      <returns>Angle spécifié converti en degrés.</returns>
      <param name="arg1">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Difference(System.String,System.String)">
      <summary>Retourne une valeur entière qui indique la différence entre les valeurs SOUNDEX de deux expressions de caractères.</summary>
      <returns>Différence SOUNDEX entre les deux chaînes.</returns>
      <param name="string1">Première chaîne.</param>
      <param name="string2">Seconde chaîne.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Decimal})">
      <summary>Retourne la valeur exponentielle de l'expression flottante spécifiée.</summary>
      <returns>Constante e élevée à la puissance de la valeur d'entrée.</returns>
      <param name="arg">Valeur d'entrée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Double})">
      <summary>Retourne la valeur exponentielle de l'expression flottante spécifiée.</summary>
      <returns>Constante e élevée à la puissance de la valeur d'entrée.</returns>
      <param name="arg">Valeur d'entrée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetDate">
      <summary>Retourne l'horodatage système base de données actuel sous la forme d'une valeur datetime sans le décalage de fuseau horaire de base de données.Cette valeur est dérivée du système d'exploitation de l'ordinateur sur lequel l'instance de SQL Server s'exécute.</summary>
      <returns>Horodatage base de données actuel.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetUtcDate">
      <summary>Retourne l'horodatage système base de données actuel en tant que valeur datetime.Le décalage de fuseau horaire de la base de données n'est pas inclus.Cette valeur représente l'heure UTC actuelle (Temps universel coordonné).Cette valeur est dérivée du système d'exploitation de l'ordinateur sur lequel l'instance de SQL Server s'exécute.</summary>
      <returns>Horodatage UTC base de données actuel.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.HostName">
      <summary>Retourne le nom de la station de travail.</summary>
      <returns>Nom de la station de travail.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsDate(System.String)">
      <summary>Indique si la valeur d'entrée est une date ou heure valide.</summary>
      <returns>1 si l'expression d'entrée est une valeur de date ou d'heure valide de types de données datetime ou smalldatetime ; sinon, 0.</returns>
      <param name="arg">Valeur testée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsNumeric(System.String)">
      <summary>Indique si la valeur d'entrée est un type numérique valide.</summary>
      <returns>1 si l'expression d'entrée est un type de données numérique valide ; sinon, 0.</returns>
      <param name="arg">Expression de chaîne.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Decimal})">
      <summary>Retourne le logarithme naturel de la valeur d'entrée spécifiée.</summary>
      <returns>Logarithme naturel de la valeur d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Double})">
      <summary>Retourne le logarithme naturel de la valeur d'entrée spécifiée.</summary>
      <returns>Logarithme naturel de la valeur d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Decimal})">
      <summary>Retourne le logarithme de base 10 de la valeur d'entrée spécifiée.</summary>
      <returns>Logarithme de base 10 de la valeur d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Double})">
      <summary>Retourne le logarithme de base 10 de la valeur d'entrée spécifiée.</summary>
      <returns>Logarithme de base 10 de la valeur d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.NChar(System.Nullable{System.Int32})">
      <summary>Retourne le caractère Unicode avec le code d'entier spécifié, tel qu'il est défini dans la norme Unicode.</summary>
      <returns>Caractère qui correspond au code du caractère d'entrée.</returns>
      <param name="arg">Code de caractère.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.PatIndex(System.String,System.String)">
      <summary>Retourne la position de départ de la première occurrence d'un modèle dans une expression spécifiée, ou zéro si le modèle est introuvable, sur tous les types de données texte et caractères valides.</summary>
      <returns>Position de caractère de départ où le modèle de chaîne a été trouvé.</returns>
      <param name="stringPattern">Modèle de chaîne à rechercher.</param>
      <param name="target">Chaîne à rechercher.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Pi">
      <summary>Retourne la valeur constante de pi.</summary>
      <returns>Valeur numérique de pi.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String)">
      <summary>Retourne une chaîne Unicode contenant des séparateurs ajoutés pour que la chaîne d'entrée soit un identificateur délimité Microsoft SQL Server valide.</summary>
      <returns>Chaîne d'origine avec les crochets ajoutés.</returns>
      <param name="stringArg">Expression à laquelle les caractères guillemet seront ajoutés.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String,System.String)">
      <summary>Retourne une chaîne Unicode contenant des séparateurs ajoutés pour que la chaîne d'entrée soit un identificateur délimité Microsoft SQL Server valide.</summary>
      <returns>Chaîne d'origine avec les caractères guillemet spécifiés ajoutés.</returns>
      <param name="stringArg">Expression à laquelle les caractères guillemet seront ajoutés.</param>
      <param name="quoteCharacter">Chaîne d'un seul caractère à utiliser en tant que délimiteur.Il peut s'agir d'une apostrophe ( ' ), d'un crochet gauche ou droit ( [ ] ) ou d'un guillemet double ( " ).Si le caractère guillemet n'est pas spécifié, les crochets sont utilisés.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Decimal})">
      <summary>Retourne la mesure en radians qui correspond à l'angle spécifié en degrés.</summary>
      <returns>Mesure en radians de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en degrés.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Double})">
      <summary>Retourne la mesure en radians qui correspond à l'angle spécifié en degrés.</summary>
      <returns>Mesure en radians de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en degrés.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int32})">
      <summary>Retourne la mesure en radians qui correspond à l'angle spécifié en degrés.</summary>
      <returns>Mesure en radians de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en degrés</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int64})">
      <summary>Retourne la mesure en radians qui correspond à l'angle spécifié en degrés.</summary>
      <returns>Mesure en radians de l'angle spécifié.</returns>
      <param name="arg">Angle mesuré en degrés</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand">
      <summary>Retourne une valeur flottante pseudo-aléatoire comprise entre 0 et 1, exclusive.</summary>
      <returns>Valeur pseudo-aléatoire.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand(System.Nullable{System.Int32})">
      <summary>Retourne une valeur flottante pseudo-aléatoire comprise entre 0 et 1, exclusive.</summary>
      <returns>Valeur pseudo-aléatoire.</returns>
      <param name="seed">La valeur initiale.Si la valeur initiale n'est pas spécifiée, le moteur de base de données SQL Server affecte une valeur initiale aléatoire.Pour une valeur initiale spécifiée, le résultat retourné est toujours le même.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})">
      <summary>Répète une valeur de chaîne un nombre spécifié de fois.</summary>
      <returns>Chaîne cible répétée par le nombre de fois spécifié par count.</returns>
      <param name="target">Chaîne valide.</param>
      <param name="count">Valeur qui spécifie la fréquence de répétition de target.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Decimal})">
      <summary>Retourne le signe positif (+1), nul (0) ou négatif (-1) de l'expression spécifiée.</summary>
      <returns>Signe de l'expression d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Double})">
      <summary>Retourne le signe positif (+1), nul (0) ou négatif (-1) de l'expression spécifiée.</summary>
      <returns>Signe de l'expression d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int32})">
      <summary>Retourne le signe positif (+1), nul (0) ou négatif (-1) de l'expression spécifiée.</summary>
      <returns>Signe de l'expression d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int64})">
      <summary>Retourne le signe positif (+1), nul (0) ou négatif (-1) de l'expression spécifiée.</summary>
      <returns>Signe de l'expression d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Decimal})">
      <summary>Retourne le sinus trigonométrique de l'angle spécifié.</summary>
      <returns>Sinus trigonométrique de l'expression d'entrée.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Double})">
      <summary>Retourne le sinus trigonométrique de l'angle spécifié.</summary>
      <returns>Sinus trigonométrique de l'expression d'entrée.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SoundCode(System.String)">
      <summary>Convertit une chaîne alphanumérique en un code de quatre caractères (SOUNDEX) utilisé pour rechercher des mots ou des noms de consonance similaire.</summary>
      <returns>Code SOUNDEX de la chaîne d'entrée.</returns>
      <param name="arg">Chaîne valide.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Space(System.Nullable{System.Int32})">
      <summary>Retourne une chaîne d'espaces répétés.</summary>
      <returns>Chaîne constituée du nombre spécifié d'espaces.</returns>
      <param name="arg1">Nombre d'espaces.Si négatif, une chaîne Null est retournée.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Decimal})">
      <summary>Retourne le carré du nombre spécifié.</summary>
      <returns>Carré de la valeur d'entrée.</returns>
      <param name="arg1">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Double})">
      <summary>Retourne le carré du nombre spécifié.</summary>
      <returns>Carré de la valeur d'entrée.</returns>
      <param name="arg1">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})">
      <summary>Retourne la racine carrée du nombre spécifié.</summary>
      <returns>Racine carrée de la valeur d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Double})">
      <summary>Retourne la racine carrée du nombre spécifié.</summary>
      <returns>Racine carrée de la valeur d'entrée.</returns>
      <param name="arg">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal})">
      <summary>Retourne des données caractères converties depuis des données numériques.</summary>
      <returns>Expression d'entrée convertie en chaîne.</returns>
      <param name="number">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>Retourne des données caractères converties depuis des données numériques.</summary>
      <returns>Expression d'entrée convertie en chaîne.</returns>
      <param name="number">Expression numérique.</param>
      <param name="length">Longueur totale de la chaîne.Inclut le séparateur décimal, le signe, les chiffres et les espaces.La valeur par défaut est 10.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>Retourne des données caractères converties depuis des données numériques.</summary>
      <returns>Expression d'entrée convertie en chaîne.</returns>
      <param name="number">Expression numérique.</param>
      <param name="length">Longueur totale de la chaîne.Inclut le séparateur décimal, le signe, les chiffres et les espaces.La valeur par défaut est 10.</param>
      <param name="decimalArg">Nombre de décimales après la virgule.decimal doit être inférieur ou égal à 16.Si decimal est supérieur à 16, le résultat est tronqué à la seizième décimale à droite du séparateur décimal.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double})">
      <summary>Retourne des données caractères converties depuis des données numériques.</summary>
      <returns>Expression d'entrée numérique convertie en une chaîne.</returns>
      <param name="number">Expression numérique.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Retourne des données caractères converties depuis des données numériques.</summary>
      <returns>Expression d'entrée numérique convertie en une chaîne.</returns>
      <param name="number">Expression numérique.</param>
      <param name="length">Longueur totale de la chaîne.Inclut le séparateur décimal, le signe, les chiffres et les espaces.La valeur par défaut est 10.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>Retourne des données caractères converties depuis des données numériques.</summary>
      <returns>Expression d'entrée numérique convertie en une chaîne.</returns>
      <param name="number">Expression numérique.</param>
      <param name="length">Longueur totale de la chaîne.Inclut le séparateur décimal, le signe, les chiffres et les espaces.La valeur par défaut est 10.</param>
      <param name="decimalArg">Nombre de décimales après la virgule.decimal doit être inférieur ou égal à 16.Si decimal est supérieur à 16, le résultat est tronqué à la seizième décimale à droite du séparateur décimal.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
      <summary>Insère une chaîne dans une autre chaîne.Supprime une longueur spécifiée de caractères dans la chaîne cible à la position de départ, puis insère la deuxième chaîne dans la chaîne cible à la position de départ.</summary>
      <returns>Chaîne qui se compose des deux chaînes.</returns>
      <param name="stringInput">Chaîne cible.</param>
      <param name="start">Position de caractère dans l'entrée de chaîne où la chaîne de remplacement sera insérée.</param>
      <param name="length">Nombre de caractères à supprimer de l'entrée de chaîne.Si length est plus long que stringInput, la suppression s'effectue jusqu'au dernier caractère de stringReplacement.</param>
      <param name="stringReplacement">Sous-chaîne à insérer dans stringInput.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Decimal})">
      <summary>Retourne la tangente trigonométrique de l'expression d'entrée.</summary>
      <returns>Tangente de l'angle d'entrée.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Double})">
      <summary>Retourne la tangente trigonométrique de l'expression d'entrée.</summary>
      <returns>Tangente de l'angle d'entrée.</returns>
      <param name="arg">Angle mesuré en radians.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Unicode(System.String)">
      <summary>Retourne la valeur entière, telle qu'elle est définie par la norme Unicode, pour le premier caractère de l'expression d'entrée.</summary>
      <returns>Code de caractère du premier caractère dans la chaîne d'entrée.</returns>
      <param name="arg">Chaîne valide.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName">
      <summary>Retourne un nom d'utilisateur de base de données qui correspond à un numéro d'identification spécifié.</summary>
      <returns>Nom d'utilisateur.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName(System.Nullable{System.Int32})">
      <summary>Retourne un nom d'utilisateur de base de données qui correspond à un numéro d'identification spécifié.</summary>
      <returns>Nom d'utilisateur.</returns>
      <param name="arg">ID utilisateur.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlProviderServices">
      <summary>Implémentation de DbProviderServices pour le fournisseur SqlClient pour SQL Server.</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.Instance">
      <summary>Instance Singleton du type SqlProviderServices.</summary>
    </member>
    <member name="F:System.Data.Entity.SqlServer.SqlProviderServices.ProviderInvariantName">
      <summary>Il s'agit de la chaîne utilisée dans les fichiers de configuration et la configuration basée sur le code connue comme le « nom invariant du fournisseur » utilisé pour spécifier les services de fournisseur Microsoft SQL Server pour ADO.NET et Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlProviderServices.RegisterInfoMessageHandler(System.Data.Common.DbConnection,System.Action{System.String})">
      <summary>Inscrit un gestionnaire pour traiter les messages autres que les messages d'erreur provenant du fournisseur de bases de données.</summary>
      <param name="connection">Connexion pour laquelle des informations sont reçues.</param>
      <param name="handler">Gestionnaire pour traiter les messages.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.TruncateDecimalsToScale">
      <summary>Définissez cet indicateur sur False pour empêcher que les valeurs <see cref="T:System.Decimal" /> soient tronquées à l'échelle (nombre de décimales) définie pour la colonne.La valeur par défaut est True, indiquant que les valeurs décimales seront tronquées afin d'éviter d'interrompre les applications existantes qui dépendent de ce comportement.</summary>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator">
      <summary>Fournisseur pour convertir des opérations de migration indépendantes du fournisseur en commandes SQL pouvant être exécutées dans une base de données Microsoft SQL Server.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.#ctor"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)">
      <summary>Génère le code SQL pour spécifier le type de données d'une colonne.Cette méthode génère uniquement le type réel, non le code SQL permettant de créer la colonne.</summary>
      <returns>Code SQL représentant le type de données.</returns>
      <param name="columnModel">Définition de la colonne.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.CreateConnection">
      <summary>Crée une connexion vide pour le fournisseur actuel.Permet aux fournisseurs dérivés d'utiliser une autre connexion que <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <returns>Connexion vide pour le fournisseur actuel.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Boolean)">
      <summary>Génère le code SQL permettant de spécifier une valeur booléenne constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Byte[])">
      <summary>Génère le code SQL permettant de spécifier une valeur d'octet constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
      <summary>Convertit un jeu d'opérations de migration en code SQL propre à Microsoft SQL Server.</summary>
      <returns>Liste d'instructions SQL à exécuter pour effectuer les opérations de migration.</returns>
      <param name="migrationOperations">Opérations à convertir.</param>
      <param name="providerManifestToken">Jeton représentant la version de SQL Server ciblée (par exemple,2005, 2008).</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="addColumnOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="addForeignKeyOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="addPrimaryKeyOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="alterColumnOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation)">
      <summary>Génère l'opération de modification de procédure spécifiée.</summary>
      <param name="alterProcedureOperation">Opération de modification de procédure.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="createIndexOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)">
      <summary>Génère l'opération de création de procédure spécifiée.</summary>
      <param name="createProcedureOperation">Opération de création de procédure.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="createTableOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="dropColumnOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="dropForeignKeyOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="dropIndexOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="dropPrimaryKeyOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation)">
      <summary>Génère l'opération de suppression de procédure spécifiée.</summary>
      <param name="dropProcedureOperation">Opération de suppression de procédure.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="dropTableOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.HistoryOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="historyOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MigrationOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.MigrationOperation" />.Autorise les fournisseurs dérivés à gérer des types d'opération supplémentaires.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="migrationOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation)">
      <summary>Génère l'opération de déplacement de procédure spécifiée.</summary>
      <param name="moveProcedureOperation">Opération de déplacement de procédure.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="moveTableOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="renameColumnOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation)">
      <summary>Génère l'opération spécifiée d'attribution d'un nouveau nom à une procédure.</summary>
      <param name="renameProcedureOperation">Opération d'attribution d'un nouveau nom à une procédure.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="renameTableOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
      <summary>Génère le code SQL pour une opération <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="sqlOperation">Opération pour laquelle le code SQL doit être produit.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation)">
      <summary>Génère l'opération de mise à jour de la base de données spécifiée, qui représente l'application d'une série de migrations.Le script généré est idempotent, ce qui signifie qu'il contient une logique conditionnelle pour vérifier si des migrations individuelles ont déjà été appliquées et pour appliquer uniquement celles en attente.</summary>
      <param name="updateDatabaseOperation">Opération de mise à jour de la base de données.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
      <summary>Génère le code SQL permettant de spécifier la valeur de géographie constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Génère le code SQL permettant de spécifier la valeur de géométrie constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTime)">
      <summary>Génère le code SQL permettant de spécifier la valeur DateTime constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)">
      <summary>Génère le code SQL permettant de spécifier une valeur DateTimeOffset constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Guid)">
      <summary>Génère le code SQL permettant de spécifier une valeur Guid constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Object)">
      <summary>Génère le code SQL permettant de spécifier une valeur constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.String)">
      <summary>Génère le code SQL permettant de spécifier la valeur de type chaîne constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)">
      <summary>Génère le code SQL permettant de spécifier la valeur TimeSpan constante par défaut définie sur une colonne.Cette méthode génère uniquement la valeur réelle, non le code SQL permettant de définir la valeur par défaut.</summary>
      <returns>Code SQL représentant la valeur par défaut.</returns>
      <param name="defaultValue">Valeur à définir.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)">
      <summary>Génère le code SQL permettant de créer un schéma de base de données.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="schema">Nom du schéma à créer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Génère le code SQL permettant de marquer une table comme une table système.Le code SQL généré doit être ajouté à l'aide de la méthode Statement.</summary>
      <param name="createTableOperation">Table à marquer comme table système.</param>
      <param name="writer">
        <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" /> dans lequel écrire le code SQL généré.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
      <summary>Génère un corps SQL pour la procédure stockée.</summary>
      <returns>Corps SQL de la procédure stockée.</returns>
      <param name="commandTrees">Arborescences de commande représentant les commandes des opérations d'insertion, mise à jour ou suppression.</param>
      <param name="rowsAffectedParameter">Nom de paramètre affecté par les lignes.</param>
      <param name="providerManifestToken">Jeton de manifeste du fournisseur.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GuidColumnDefault">
      <summary>Retourne la valeur de colonne par défaut à utiliser pour les colonnes GUID générées par le magasin lorsqu'aucune valeur par défaut n'est explicitement spécifiée dans la migration.Retourne newsequentialid() pour SQL Server 2005 sur site ou version ultérieure.Retourne newid() pour SQL Azure.</summary>
      <returns>newsequentialid() ou newid() comme décrit ci-dessus.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Name(System.String)">
      <summary>Génère un nom entre guillemets.Le nom fourni peut contenir ou non le schéma.</summary>
      <returns>Nom entre guillemets.</returns>
      <param name="name">Nom à mettre entre guillemets.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Quote(System.String)">
      <summary>Met entre guillemets un identificateur pour SQL Server.</summary>
      <returns>Identificateur entre guillemets.</returns>
      <param name="identifier">Identificateur à mettre entre guillemets.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String)">
      <summary>Ajoute une instruction à exécuter sur la base de données.</summary>
      <param name="writer">Writer contenant le code SQL à exécuter.</param>
      <param name="batchTerminator">Terminateur de lot pour le fournisseur de bases de données.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean,System.String)">
      <summary>Ajoute une instruction à exécuter sur la base de données.</summary>
      <param name="sql">Instruction à exécuter.</param>
      <param name="suppressTransaction">Obtient ou définit une valeur indiquant si cette instruction doit être exécutée en dehors de l'étendue de la transaction utilisée pour rendre le processus de migration transactionnel.Si cette option a la valeur true, cette opération n'est pas annulée en cas d'échec du processus de migration.</param>
      <param name="batchTerminator">Terminateur de lot pour le fournisseur de bases de données.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Writer">
      <summary>Obtient un nouveau <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" /> susceptible d'être utilisé pour créer du code SQL.Il s'agit simplement d'une méthode d'assistance permettant de créer un writer.L'écriture dans l'enregistreur n'entraîne pas l'inscription du code SQL en vue de son exécution.Vous devez transmettre le code SQL généré à la méthode Statement.</summary>
      <returns>Writer de texte vide à utiliser pour la génération du code SQL.</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialFunctions">
      <summary>Contient des stubs de fonction qui exposent les méthodes SqlServer en Linq to Entities.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeography)">
      <summary>Retourne la représentation en texte connu (WKT) OGC (Open Geospatial Consortium) d'une instance de géographie augmentée avec toutes valeurs Z (élévation) et M (mesure) transmises par l'instance.</summary>
      <returns>Représentation en texte connu (WKT) OGC (Open Geospatial Consortium) d'une instance de géographie.</returns>
      <param name="geographyValue">Valeur de géographie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Retourne la représentation en texte connu (WKT) OGC (Open Geospatial Consortium) d'une instance de géographie augmentée avec toutes valeurs Z (élévation) et M (mesure) transmises par l'instance.</summary>
      <returns>Représentation en texte connu (WKT) OGC (Open Geospatial Consortium) d'une instance de géométrie.</returns>
      <param name="geometryValue">Valeur de géométrie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>Retourne un objet géométrique représentant l'union de toutes les valeurs de points dont la distance par rapport à une instance de géographie est inférieure ou égale à la valeur spécifiée, en autorisant une tolérance spécifiée.</summary>
      <returns>Union de toutes les valeurs de points dont la distance par rapport à une instance de géographie est inférieure ou égale à une valeur spécifiée</returns>
      <param name="geographyValue">Valeur de géographie.</param>
      <param name="distance">Distance.</param>
      <param name="tolerance">Tolérance spécifiée.</param>
      <param name="relative">Spécifie si la valeur de tolérance est relative ou absolue.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>Retourne un objet géométrique représentant l'union de toutes les valeurs de points dont la distance de géométrie par rapport à une instance de géographie est inférieure ou égale à la valeur spécifiée, en autorisant une tolérance spécifiée.</summary>
      <returns>Union de toutes les valeurs de points dont la distance par rapport à une instance de géométrie est inférieure ou égale à une valeur spécifiée</returns>
      <param name="geometryValue">Valeur de géométrie.</param>
      <param name="distance">Distance.</param>
      <param name="tolerance">Tolérance spécifiée.</param>
      <param name="relative">Spécifie si la valeur de tolérance est relative ou absolue.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeAngle(System.Data.Entity.Spatial.DbGeography)">
      <summary>Retourne l'angle maximal entre le point retourné par EnvelopeCenter() et un point dans l'instance de géographie en degrés.</summary>
      <returns>Angle maximal entre le point retourné par EnvelopeCenter().</returns>
      <param name="geographyValue">Valeur de géographie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeCenter(System.Data.Entity.Spatial.DbGeography)">
      <summary>Retourne un point pouvant être utilisé comme le centre d'un cercle englobant l'instance de géographie.</summary>
      <returns>Valeur SqlGeography qui spécifie l'emplacement du centre d'un cercle englobant.</returns>
      <param name="geographyValue">Valeur de géographie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Offre une méthode d'intersection rapide, d'index uniquement, qui permet de déterminer si une instance de géographie croise une autre instance de SqlGeography, en supposant qu'un index est disponible.</summary>
      <returns>True si une instance de géographie croise potentiellement une autre instance de SqlGeography ; sinon, False.</returns>
      <param name="geographyValue">Valeur de géographie.</param>
      <param name="geographyOther">Autre instance de géographie à comparer à l'instance sur laquelle le filtre est appelé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Offre une méthode d'intersection rapide, d'index uniquement, qui permet de déterminer si une instance de géographie croise une autre instance de SqlGeometry, en supposant qu'un index est disponible.</summary>
      <returns>True si une instance de géographie croise potentiellement une autre instance de SqlGeography ; sinon, False.</returns>
      <param name="geometryValue">Valeur de géométrie.</param>
      <param name="geometryOther">Autre instance de géographie à comparer à l'instance sur laquelle le filtre est appelé.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeography,System.String)">
      <summary>Teste si l'instance de SqlGeography est identique au type spécifié.</summary>
      <returns>Chaîne qui spécifie un des 12 types présentés dans la hiérarchie de types de géographies.</returns>
      <param name="geographyValue">Valeur de géographie.</param>
      <param name="geometryTypeName">Chaîne qui spécifie un des 12 types présentés dans la hiérarchie de types de géographies.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>Teste si l'instance de SqlGeometry est identique au type spécifié.</summary>
      <returns>Chaîne qui spécifie un des 12 types présentés dans la hiérarchie de types de géographies.</returns>
      <param name="geometryValue">Valeur de géométrie.</param>
      <param name="geometryTypeName">Chaîne qui spécifie un des 12 types présentés dans la hiérarchie de types de géographies.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.MakeValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Convertit une instance de géométrie non valide en une instance de géométrie de type OGC (Open Geospatial Consortium).</summary>
      <returns>Instance de géométrie convertie.</returns>
      <param name="geometryValue">Valeur de géométrie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.NumRings(System.Data.Entity.Spatial.DbGeography)">
      <summary>Retourne le nombre total d'anneaux dans une instance de polygone.</summary>
      <returns>Nombre total d'anneaux.</returns>
      <param name="geographyValue">Valeur de géographie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Construit une instance de géographie représentant une instance de point à partir de valeurs x et y et d'un identifiant de référence spatiale (SRID).</summary>
      <returns>Instance de géographie construite.</returns>
      <param name="latitude">Coordonnée x du point en cours de génération.</param>
      <param name="longitude">Coordonnée y du point en cours de génération</param>
      <param name="spatialReferenceId">SRID de l'instance de géographie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Construit une instance de géométrie représentant une instance de point à partir de valeurs x et y et d'un identifiant de référence spatiale (SRID).</summary>
      <returns>Instance de géométrie construite.</returns>
      <param name="xCoordinate">Coordonnée x du point en cours de génération.</param>
      <param name="yCoordinate">Coordonnée y du point en cours de génération</param>
      <param name="spatialReferenceId">SRID de l'instance de géographie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double})">
      <summary>Retourne une approximation de l'instance de géographie donnée produite en exécutant l'algorithme de Douglas-Peucker sur l'instance avec la tolérance donnée.</summary>
      <returns>Retourne <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="geographyValue">Valeur de géographie.</param>
      <param name="tolerance">Tolérance en entrée de l'algorithme Douglas-Peucker.La tolérance doit être un nombre positif.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double})">
      <summary>Retourne une approximation de l'instance de géographie donnée produite en exécutant l'algorithme de Douglas-Peucker sur l'instance avec la tolérance donnée.</summary>
      <returns>Retourne <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="geometryValue">Valeur de géométrie.</param>
      <param name="tolerance">Tolérance en entrée de l'algorithme Douglas-Peucker.La tolérance doit être un nombre positif.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.RingN(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Int32})">
      <summary>Retourne l'anneau spécifié si l'instance de SqlGeography : 1 ≤ n ≤ NumRings().</summary>
      <returns>Objet SqlGeography qui représente l'anneau spécifié par n.</returns>
      <param name="geographyValue">Valeur de géographie.</param>
      <param name="index">Expression int entre 1 et le nombre d'anneaux dans une instance de polygone.</param>
    </member>
  </members>
</doc>